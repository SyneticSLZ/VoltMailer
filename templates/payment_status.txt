<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Payment Status</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #02021E;
            color: #fff;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .container {
            max-width: 800px;
            padding: 20px;
            background: rgba(0, 0, 0, 0);
            border-radius: 10px;
            text-align: center;
            width: 90%;
            box-sizing: border-box;
        }

        .title {
            font-size: 2.5em;
            margin-bottom: 10px;
            background: linear-gradient(to bottom, #f0f, #0ff);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            color: transparent;
        }

        .subtitle {
            font-size: 1.2em;
            margin-bottom: 30px;
            color: #ddd;
        }

        .hidden {
            display: none;
        }

        .active {
            display: flex;
            align-items: center;
            justify-content: center;
            flex-direction: column;
        }

        .loader {
            padding: 0;
            margin: 0;
            position: relative;
            display: flex;
            align-items: center;
            justify-content: center;
            width: 150px;
            height: 150px;
            margin: 30px 0;
            perspective: 780px;
        }

        .text {
            font-size: 20px;
            font-weight: 700;
            color: #cecece;
            z-index: 10;
        }

        .load-inner {
            position: absolute;
            width: 100%;
            height: 100%;
            box-sizing: border-box;
            border-radius: 50%;
        }

        .load-inner.load-one {
            left: 0%;
            top: 0%;
            border-bottom: 3px solid #5c5edc;
            animation: rotate1 1.15s linear infinite;
        }

        .load-inner.load-two {
            right: 0%;
            top: 0%;
            border-right: 3px solid #9147ff;
            animation: rotate2 1.15s 0.1s linear infinite;
        }

        .load-inner.load-three {
            right: 0%;
            bottom: 0%;
            border-top: 3px solid #3b82f6;
            animation: rotate3 1.15s 0.15s linear infinite;
        }

        @keyframes rotate1 {
            0% { transform: rotateX(45deg) rotateY(-45deg) rotateZ(0deg); }
            100% { transform: rotateX(45deg) rotateY(-45deg) rotateZ(360deg); }
        }

        @keyframes rotate2 {
            0% { transform: rotateX(45deg) rotateY(45deg) rotateZ(0deg); }
            100% { transform: rotateX(45deg) rotateY(45deg) rotateZ(360deg); }
        }

        @keyframes rotate3 {
            0% { transform: rotateX(-60deg) rotateY(0deg) rotateZ(0deg); }
            100% { transform: rotateX(-60deg) rotateY(0deg) rotateZ(360deg); }
        }

        @media (max-width: 600px) {
            .title {
                font-size: 2em;
            }

            .subtitle {
                font-size: 1em;
            }
        }

        input[type="text"] {
            padding: 10px;
            margin: 20px 0;
            font-size: 1em;
            border: none;
            border-radius: 5px;
            width: 80%;
            box-sizing: border-box;
        }

        button {
            padding: 10px 20px;
            font-size: 1em;
            color: #fff;
            background-color: #ff6f61;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            margin-top: 20px;
        }

        button:hover {
            background-color: #e55a50;
        }

        .retry-link {
            color: #ff6f61;
            text-decoration: none;
        }

        .retry-link:hover {
            text-decoration: underline;
        }
        .login {
  /* width: 340px; */
  /* height: 400px; */
  /* background: #2c2c2c; */
  padding: 47px;
  padding-bottom: 57px;
  color: #fff;
  border-radius: 17px;
  padding-bottom: 50px;
  font-size: 1.3em;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

.login input[type="text"],
.login input[type="password"] {
  opacity: 1;
  display: block;
  border: none;
  outline: none;
  width: 100%;
  padding: 13px 18px;
  margin: 20px 0 0 0;
  font-size: 0.8em;
  border-radius: 100px;
  background: #131212;
  color: #fff;
}

.login input:focus {
  animation: bounce 1s;
  -webkit-appearance: none;
}
.login h1{
    /* font-size: 60px; */
}
.login input[type=submit],
.login input[type=button],
.h1 {
  border: 0;
  outline: 0;
  width: 100%;
  padding: 13px;
  margin: 40px 0 0 0;
  border-radius: 500px;
  font-weight: 600;
  animation: bounce2 1.6s;

}

.h1 {
  padding: 0;
  position: relative;
  top: -35px;
  display: block;
  margin-bottom: -0px;
  font-size: 1.3em;
}

.btn {
  background: linear-gradient(144deg, #af40ff, #5b42f3 50%, #00ddeb);
  color: #fff;
  padding: 16px !important;
}

.btn:hover {
    background: linear-gradient(144deg, #af40ffc8, #5b42f3c8 50%, #00ddebc8);
  color: rgb(255, 255, 255);
  padding: 16px !important;
  cursor: pointer;
  transition: all 0.4s ease;
}

.login input[type=text] {
  animation: bounce 1s;
  -webkit-appearance: none;
  margin-top: 2em;
}

.login input[type=password] {
  animation: bounce1 1.3s;
}

.ui {
  font-weight: bolder;
  background: -webkit-linear-gradient(#B563FF, #535EFC, #0EC8EE);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  border-bottom: 4px solid transparent;
  border-image: linear-gradient(0.25turn, #535EFC, #0EC8EE, #0EC8EE);
  border-image-slice: 1;
  display: inline;
}

@media only screen and (max-width: 600px) {
  .login {
    width: 70%;
    padding: 3em;
  }
}

@keyframes bounce {
  0% {
    transform: translateY(-250px);
    opacity: 0;
  }
}

@keyframes bounce1 {
  0% {
    opacity: 0;
  }

  40% {
    transform: translateY(-100px);
    opacity: 0;
  }
}

@keyframes bounce2 {
  0% {
    opacity: 0;
  }

  70% {
    transform: translateY(-20px);
    opacity: 0;
  }
}
    </style>
        <link rel="icon" href="../logo.svg" type="image/icon type">
</head>
<body>
    <div class="container">
        <div id="processing" class="active">
            <h1 class="title">Processing Payment</h1>
            <div class="loader">
                <div class="load-inner load-one"></div>
                <div class="load-inner load-two"></div>
                <div class="load-inner load-three"></div>
                <span class="text">Loading...</span>
            </div>
        </div>
        <div id="success" class="hidden">
            <div class="login wrap">
                <h1 class="title">Payment Success</h1>
                <input pattern="^([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$" placeholder="What should we call you? " id="userName" name="email" type="text">
                <input value="Get started" class="btn" type="submit" onclick="submitName()">
              </div>
        </div>
        <div id="failure" class="hidden">
            <h1 class="title">Payment Failed</h1>
            <p class="subtitle">Unfortunately, your payment could not be processed. Please try again or <a class="retry-link" href="/">return to checkout</a>.</p>
        </div>
        <div id="welcome" class="hidden">
            <h1 class="title">Welcome to the Future of Email Automation</h1>
            <div class="loader">
                <div class="load-inner load-one"></div>
                <div class="load-inner load-two"></div>
                <div class="load-inner load-three"></div>
                <span class="text">Setting up your account...</span>
            </div>
        </div>
    </div>
    <script>
                async function initialize() {
            const freeTrial = '{{ trial }}'
            const email = '{{ email }}';
            const service = '{{ service}}'
            const sessionId = '{{ session_id }}';
            const response = await fetch(`/session-status?session_id=${sessionId}`);
            const session = await response.json();
            const success = document.getElementById('success')
            if (session.status === 'complete') {
                document.getElementById('processing').classList.remove('active');
                document.getElementById('processing').classList.add('hidden');
                document.getElementById('success').classList.remove('hidden');
                document.getElementById('success').classList.add('active');
                success.innerHtml = `
                <div class="login wrap">
                <h1 class="title">Payment Success</h1>
                <input pattern="^([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$" placeholder="What should we call you? " id="email" name="email" type="text">
                <input value="Get started" class="btn" type="submit" onclick="submitName()">
              </div>
                `
            } else {
                if (freeTrial) {

                document.getElementById('processing').classList.remove('active');
                document.getElementById('processing').classList.add('hidden');
                document.getElementById('success').classList.remove('hidden');
                document.getElementById('success').classList.add('active');
                success.innerHtml = `
                <div class="login wrap">
                <h1 class="title">Payment Success</h1>
                <input pattern="^([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$" placeholder="What should we call you? " id="email" name="email" type="text">
                <input value="Get started" class="btn" type="submit" onclick="submitNameFreeTrial()">
              </div>
                `
                }
                else{
                document.getElementById('processing').classList.remove('active');
                document.getElementById('processing').classList.add('hidden');
                document.getElementById('failure').classList.remove('hidden');
                document.getElementById('failure').classList.add('active');
                }
            }
        }
        // async function initialize() {
        //     const freeTrial = '{{ trial }}'
        //     const email = '{{ email }}';
        //     const sessionId = '{{ session_id }}';
        //     const response = await fetch(`/session-status?session_id=${sessionId}`);
        //     const session = await response.json();
        //     const success = document.getElementById('success')
        //     if (session.status === 'complete') {
        //         document.getElementById('processing').classList.remove('active');
        //         document.getElementById('processing').classList.add('hidden');
        //         document.getElementById('success').classList.remove('hidden');
        //         document.getElementById('success').classList.add('active');
        //         success.innerHtml = `
        //         <div class="login wrap">
        //         <h1 class="title">Payment Success</h1>
        //         <input pattern="^([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$" placeholder="What should we call you? " id="email" name="email" type="text">
        //         <input value="Get started" class="btn" type="submit" onclick="submitName()">
        //       </div>
        //         `
        //     } else {
        //         if (freeTrial) {

        //         document.getElementById('processing').classList.remove('active');
        //         document.getElementById('processing').classList.add('hidden');
        //         document.getElementById('success').classList.remove('hidden');
        //         document.getElementById('success').classList.add('active');
        //         success.innerHtml = `
        //         <div class="login wrap">
        //         <h1 class="title">Payment Success</h1>
        //         <input pattern="^([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$" placeholder="What should we call you? " id="email" name="email" type="text">
        //         <input value="Get started" class="btn" type="submit" onclick="submitNameFreeTrial()">
        //       </div>
        //         `
        //         }
        //         else{
        //         document.getElementById('processing').classList.remove('active');
        //         document.getElementById('processing').classList.add('hidden');
        //         document.getElementById('failure').classList.remove('hidden');
        //         document.getElementById('failure').classList.add('active');
        //         }
        //     }
        // }

        function submitName() {
            const userName = document.getElementById('userName').value;
            if (userName.trim() === '') {
                alert('Please enter your name.');
                return;
            }

            document.getElementById('success').classList.remove('active');
            document.getElementById('success').classList.add('hidden');
            document.getElementById('welcome').classList.remove('hidden');
            document.getElementById('welcome').classList.add('active');

            setTimeout(() => {
                const email = '{{ email }}';
                const sessionId = '{{ session_id }}';
                const password = '{{ password }}'
                const customerData = {
                    stripeID: sessionId,
                    email: email,
                    password: password,
                    name: userName,
                    plan: 'Premium',
                    total_emails: 1000,
                    priceID: 'price_1PJsseKJeZAyw8f4UVbMQfRa',
                    service: '{{ service }}'
                };

                fetch('/add_and_redirect', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(customerData)
                })
                .then(response => response.json())
                .then(data => {
                    if (data.redirect_url) {
                        setTimeout(() => {
                            window.location.href = data.redirect_url;
                        }, 3000);
                    }
                });
            }, 3000);
        }

        async function startFreeTrial() {
            const userName = document.getElementById('userName').value;
            if (userName.trim() === '') {
                alert('Please enter your name.');
                return;
            }
            const response = await fetch('/free-trial', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ email: email, name: userName })
            });

            const data = await response.json();

            if (data.error) {
                console.error('Error:', data.error);
                alert('Failed to start free trial.');
            } else {
                window.location.href = `/Db?customer_id=${data.customer_id}&subscription_id=${data.subscription_id}&product_id=${data.product_id}&total_emails=${data.total_emails}&email=${data.email}`;
            }
        }

        initialize();
    </script>
</body>
</html>
